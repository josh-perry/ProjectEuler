# Problem 2: Even Fibonacci Numbers
# Each new term in the Fibonacci sequence is generated by adding the previous two terms.
# By starting with 1 and 2, the first 10 terms will be:
# 		1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million,
# find the sum of the even-valued terms.


def fib(max_value=4000000):
    sequence = []
    last, curr = 1, 1

    while curr < max_value:
        curr, last = last, curr + last
        sequence.append(curr)

    return sequence


def euler_2():
    numbers = fib()
    even_numbers = [i for i in numbers if i % 2 == 0]

    total = sum(even_numbers)
    print("The answer should be: " + str(total))


if __name__ == "__main__":
    euler_2()
